---
title: "Reproducible document"
author: "Mette BI"
format: html
---

## Basics of R

create a new chunk to start coding by using bruge control-shift-p, e.g.:

```{r}
1 + 1
```

## setup code chunk

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
post_meal_data <- read_csv2(here::here("data/post-meal-insulin.csv"))

small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)

tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)

tidied_post_meal_data <- tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR", "Control", "First-degree relative")
  )
```

## Showing the data

```{r}
post_meal_data
```

```{r}
glimpse(post_meal_data)
```

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-mettes-histo
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

@fig-mettes-histo

## Discrete plots

```{r}
#| fig-cap: "Group"
#| label: fig-group-discrete
ggplot(post_meal_data, aes(x = Group)) +
  geom_bar()
```

See @fig-group-discrete above for a cool plot!

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```
## putting two plots side by side

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

```{r side-by-side-figs}
#| label: fig-bmi-glycemi
#| fig-cap: "BMI and glycemia, side by side"
#| fig-subcap:
#| - "Distribution of BMI"
#| - "Distribution of glycemia"
#| layout-ncol: 2

ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

```{r side-by-side-figs}
#| label: fig-bmi-glycemia
#| fig-cap: "BMI and glycemia, side by side"
#| fig-subcap:
#| - ""
#| - ""
#| layout-ncol: 2

ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

## Plotting two continuous variables

```{r}
#| fig-cap: "Scatterplot of BMI and the AUC for glucose"
#| label: fig-bmi-auc_pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() +
  geom_smooth()
```

## Pushing changes to remote aka github

## Pulling changes locally

## How I accessed Github from R and pushed the project to Github

look at 9 in the pre-course material https://guides.rostools.org/connect-github.html

## Selecting columns from dataset

```{r}
select(post_meal_data, Age)

select(post_meal_data, Age, BMI, Weight)

select(post_meal_data, -Group)

select(post_meal_data, starts_with("PG"))

select(post_meal_data, ends_with("DXA"))

select(post_meal_data, contains("0"))
```

## Renaming specific columns

```{r}
small_post_meal_data |>
  rename(auc_glucose = auc_pg)

small_post_meal_data |>
  rename(auc_glucose = auc_pg, auc_insulin = auc_ins)
```

## Select and rename tasks
```{r}
# Task 1. = 13 columns
post_meal_data |>
  select(contains("OGTT"))

# Task 2.
post_meal_data |>
  select(contains(".."), -contains("...")) |>
  rename(P.Glucose.minus5.OGTT = P.Glucose..5.OGTT, Insulin.minus5.OGTT = Insulin..5.OGTT.X)
```

# Task 3.
basic_info <- select(post_meal_data, id, BMI, Length, Weight, Age)
rename(basic_info, Height = Length)
```{r}
post_meal_data |>
  select(id, BMI, Length, Weight, Age) |>
  rename(Height = Length)
```

## filtering data by row
```{r}
small_post_meal_data |>
  filter(glykemi == 1)

small_post_meal_data |>
  filter(BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR")
```

```{r}
small_post_meal_data |>
  filter(Group == "CTR", BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR" | BMI >= 25)
```


## Modify a column 
```{r}
tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR", "Control", "First-degree relative")
  )
```

## Practice with filter and mutate
```{r}
# Task 1. Answer = 16
post_meal_data |>
  filter(BMI >= 20 & BMI <= 40 & Group == "FDR")
```

```{r}
# Task 2. Answer = 10 rows
post_meal_data |>
  mutate(percent_body_fat = (Fat.mass.DXA / Weight) * 100) |>
  filter(percent_body_fat > 30)
```

## Visualising with jitter plot - Wrangling
```{r}
tidied_post_meal_data |>
  mutate(overweight = ifelse(BMI >= 25, "Overweight", "Not overweight")) |>
  ggplot(aes(x = overweight, y = insulin_glucose_ratio)) +
  geom_jitter()
```
## PLotting three or more variables

```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  ggplot(aes(x = Age, y = auc_insulin, colour = Group)) +
  geom_point()
```

```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(x = BMI, y = insulin_glucose_ratio, colour = Group)) +
  geom_point() +
  facet_grid(rows = vars(young)) +
  labs(
    x = "Body mass index (BMI)",
    y = "Insulin to glucose-ratio"
  )
```
